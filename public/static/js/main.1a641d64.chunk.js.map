{"version":3,"sources":["components/helpers/fetch.js","types/types.js","actions/auth.js","components/hooks/useForm.js","components/auth/LoginScreen.js","components/helpers/pEvents.js","actions/events.js","components/ui/Navbar.js","components/helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/routers/PrivateRoute.js","components/routers/PublicRoute.js","components/routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSintoken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchContoken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","logout","useForm","initialState","useState","value","setvalue","reset","handleInputChange","target","name","LoginScreen","dispatch","useDispatch","lEmail","lPassword","valuelogin","handleInputChangelogin","rName","rEmail","rPassword","rPassword2","valueRegister","handleInputChangeRegister","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","prepareEvents","events","map","end","moment","toDate","start","eventAddNew","event","clearActiveNote","eventUpdated","eventDelete","eventLoaded","Navbar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","startDate","minutes","second","add","now","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","endDate","setEndDate","titleValid","setTitleValid","formValue","setFormValue","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","view","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","PrivateRoute","isAuthenticated","Component","component","rest","props","to","propTyps","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a641d64.chunk.js","sourcesContent":["\r\n\r\n\r\nconst baseUrl= process.env.REACT_APP_API_URL;\r\n\r\n\r\n\r\n\r\n\r\nconst fetchSintoken=(endpoint,data,method='GET') =>{\r\n\r\n\r\n    const url =`${baseUrl}/${endpoint}`;\r\n    if(method ==='GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url,{method,\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            },\r\n            body:JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst fetchContoken=(endpoint,data,method='GET') =>{\r\n\r\n\r\n    const url =`${baseUrl}/${endpoint}`;\r\n    const token =localStorage.getItem('token') || '';\r\n    if(method ==='GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token':token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url,{method,\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'x-token':token\r\n            },\r\n            body:JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport{\r\n    fetchSintoken,\r\n    fetchContoken\r\n}","export const types={\r\n\r\n    uiOpenModal:'[ui] Open modal',\r\n    uiCloseModal:'[ui] Close modal',\r\n\r\n    eventAddNew:'[event] Add new',\r\n    eventStartAddNew:'[event] Start add new',\r\n    eventSetActive:'[event] Set active',\r\n    eventClearActive:'[event] Clear active',\r\n    eventClearAll:'[event] Clear all',\r\n    eventUpdate:'[event] Event updated',\r\n    eventDeleted:'[event] Event deleted',\r\n    eventLoaded:'[event] Event loaded',\r\n    \r\n\r\n\r\n    \r\n    authCheckingFinish:'[auth] Checking finish',\r\n    authStartLogin:'[auth] Start Login',\r\n    authLogin:'[auth] Login',\r\n    authStartRegister:'[auth] Start Register',\r\n    authTokenRenew:'[auth] Token renew',\r\n    authLogout:'[auth] logout'\r\n}","import Swal from \"sweetalert2\"\r\nimport { fetchContoken, fetchSintoken } from \"../components/helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\n\r\n\r\n\r\nexport const startLogin =(email,password) =>\r\n{\r\n    return async(dispatch)=>{\r\n       const resp= await fetchSintoken('auth',{email,password},'POST')\r\n        const body = await resp.json();\r\n        \r\n        if (body.ok) {\r\n             localStorage.setItem('token',body.token);\r\n             localStorage.setItem('token-init', new Date().getTime());\r\n            dispatch(login({uid:body.uid,\r\n                            name:body.name}));\r\n        }else{\r\n            Swal.fire('Error',body.msg,'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister =(name,email,password) =>\r\n{\r\n    return async(dispatch)=>{\r\n       const resp= await fetchSintoken('auth/new',{name,email,password},'POST')\r\n        const body = await resp.json();\r\n        \r\n        if (body.ok) {\r\n             localStorage.setItem('token',body.token);\r\n             localStorage.setItem('token-init', new Date().getTime());\r\n            dispatch(login({uid:body.uid,\r\n                            name:body.name}));\r\n        }else{\r\n            Swal.fire('Error',body.msg,'error');\r\n        }\r\n    }\r\n}\r\nexport const startChecking =() => {\r\n    return async(dispatch) =>{\r\n        const resp= await fetchContoken('auth/renew'); \r\n        const body = await resp.json();\r\n        \r\n        if (body.ok) {\r\n             localStorage.setItem('token',body.token);\r\n             localStorage.setItem('token-init', new Date().getTime());\r\n            dispatch(login({uid:body.uid,\r\n                            name:body.name}));\r\n        }else{\r\n            dispatch(checkingFinish());\r\n        }\r\n    } \r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type:types.authCheckingFinish\r\n})\r\n\r\n\r\nconst login = (user) =>({\r\n    type:types.authLogin,\r\n    payload:user\r\n});\r\nexport const startLogout =()=>{\r\n    return (dispatch)=>{\r\n        localStorage.clear();\r\n        dispatch(logout()); \r\n    }\r\n}\r\nconst logout = ()=>({\r\n\r\n    type:types.authLogout\r\n})","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState={}) => {\r\n    const [value, setvalue] = useState(initialState)\r\n\r\n    const reset = ()=>{\r\n        setvalue(initialState)\r\n\r\n    }\r\n\r\n    const handleInputChange=({target})=>\r\n    {\r\n        \r\n        setvalue({...value,\r\n            [target.name]:target.value})\r\n        \r\n    }\r\n\r\n   return [value,handleInputChange,reset]\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const [valuelogin,handleInputChangelogin]=useForm({\r\n        lEmail:'',\r\n        lPassword:''\r\n    });\r\n    const [valueRegister,handleInputChangeRegister]=useForm({\r\n        rName:'',\r\n        rEmail:'',\r\n        rPassword:'',\r\n        rPassword2:'',\r\n\r\n    });\r\n    const {rName,rEmail,rPassword,rPassword2}=valueRegister;\r\n\r\n    const {lEmail,lPassword}=valuelogin\r\n\r\n    const handleLogin=(e)=>{\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail,lPassword));\r\n\r\n\r\n    }\r\n    const handleRegister=(e)=>{\r\n        e.preventDefault();\r\n        if(rPassword!==rPassword2){\r\n            return Swal.fire('Error','Las contraseñas deben de ser iguales','error')\r\n            \r\n        }\r\n        dispatch(startRegister(rName,rEmail,rPassword));\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleInputChangelogin}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleInputChangelogin}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleInputChangeRegister}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleInputChangeRegister}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword\"\r\n                                value={rPassword}\r\n                                onChange={handleInputChangeRegister}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleInputChangeRegister}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import moment from \"moment\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const prepareEvents = (events=[]) => {\r\n\r\n    return events.map(\r\n        (e) =>({\r\n            ...e,\r\n            end:moment(e.end).toDate(),\r\n            start:moment(e.start).toDate()\r\n        })\r\n    )\r\n\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchContoken } from \"../components/helpers/fetch\";\r\nimport { prepareEvents } from \"../components/helpers/pEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n   return async(dispatch,getState) => {\r\n        const {uid,name} = getState().auth;\r\n\r\n\r\n    try {\r\n        \r\n        const resp= await fetchContoken('events',event,'POST'); \r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            event.id =body.evento.id;\r\n            event.user ={\r\n                _id:uid,\r\n                name\r\n            }\r\n            dispatch(eventAddNew( event ));\r\n        }\r\n        \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n    \r\n\r\n   }\r\n   \r\n}\r\n\r\nexport const eventSetActive =(event)=> ({\r\n    type:types.eventSetActive,\r\n    payload:event\r\n})\r\nconst eventAddNew=(event)=> ({\r\n    type:types.eventAddNew,\r\n    payload:event\r\n})\r\nexport const clearActiveNote=()=>({\r\n    type:types.eventClearActive\r\n})\r\n\r\nexport const clearAll=()=>({\r\n    type:types.eventClearAll\r\n})\r\n\r\nexport const eventStartUpdated = (event) =>{\r\n    return async(dispatch) => {\r\n        try {\r\n            \r\n            const resp= await fetchContoken(`events/${event.id}`,event,'PUT'); \r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n\r\n                 dispatch(eventUpdated(event));\r\n            }else {\r\n                Swal.fire('Error',body.msg,'error')\r\n            }\r\n\r\n           \r\n\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n const eventUpdated=(event)=>({\r\n    type:types.eventUpdate,\r\n    payload:event\r\n})\r\n\r\nexport const eventStartDelete = () =>{\r\n    return async(dispatch,getState) => {\r\n        try {\r\n            const {id} = getState().calendar.activeEvent;\r\n            const resp= await fetchContoken(`events/${id}`,{},'DELETE'); \r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n\r\n                 dispatch(eventDelete());\r\n            }else {\r\n                Swal.fire('Error',body.msg,'error')\r\n            }\r\n\r\n           \r\n\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n const eventDelete=()=>({\r\n    type:types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            \r\n            const resp= await fetchContoken('events'); \r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos) ;\r\n\r\n            dispatch(eventLoaded(events))\r\n\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type:types.eventLoaded,\r\n    payload:events\r\n})","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { clearAll } from '../../actions/events';\r\n\r\nexport const Navbar = () => {\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () =>{\r\n        dispatch(startLogout());\r\n        dispatch(clearAll());\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button className=\"btn btn-outline-danger\"\r\n                    onClick={handleLogout}>\r\n                \r\n                \r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span>\r\n                    \r\n                     Salir\r\n                </span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n}; ","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const CalendarEvent = ( {event}) => {\r\n    const {name} = useSelector(state => state.auth)\r\n    const {title,user=name}=event;\r\n    \r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>-{user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal =()=> ({\r\n    type:types.uiOpenModal\r\n})\r\nexport const uiCloseModal =()=> ({\r\n    type:types.uiCloseModal\r\n})","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { clearActiveNote, eventStartAddNew, eventStartUpdated } from '../../actions/events';\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n  Modal.setAppElement('#root')\r\n \r\n  const startDate= moment().minutes(0).second(0).add(1,'hours');\r\n  const now=startDate.clone().add(1,'hours');\r\n\r\n  const initEvent={\r\n    title:'',\r\n    notes:'',\r\n    start:startDate.toDate(),\r\n    end:now.toDate()}\r\n\r\nexport const CalendarModal = () => {\r\n    const dispatch = useDispatch();\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n    const [dateStart, setDateStart] = useState(startDate.toDate());\r\n    const [endDate, setEndDate] = useState(now.toDate());\r\n    const [titleValid, setTitleValid] = useState(true)\r\n    const [formValue, setFormValue] = useState(initEvent)\r\n   \r\n    const {title,notes,start,end}=formValue;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValue(activeEvent)\r\n        }\r\n        else{\r\n            setFormValue(initEvent)\r\n        }\r\n    }, [activeEvent,setFormValue])\r\n\r\n    const closeModal =()=>{\r\n        dispatch(uiCloseModal());\r\n        dispatch(clearActiveNote())\r\n        setFormValue(initEvent);\r\n    }\r\n    const handleInputChange=({target})=>\r\n    {\r\n        \r\n        setFormValue({...formValue,\r\n            [target.name]:target.value})\r\n        \r\n    }\r\n    const hanleStartDateChange =(e)=>{\r\n        setDateStart(e);\r\n        setFormValue({\r\n            ...formValue,\r\n            start:e\r\n        })\r\n\r\n\r\n    }\r\n    const hanleEndDateChange =(e)=>{\r\n        setEndDate(e);\r\n        setFormValue({\r\n            ...formValue,\r\n            end:e\r\n        })\r\n    }\r\n    const hanleSubmit =(e)=>{\r\n        e.preventDefault();\r\n\r\n        const momentStart=moment( start );\r\n        const momentEnd=moment( end );\r\n        \r\n        if( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio','error')\r\n        }\r\n        \r\n        if(title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdated(formValue));\r\n        }\r\n        else {\r\n        dispatch(eventStartAddNew(formValue))\r\n        }\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n    return (\r\n        <Modal\r\n        isOpen={modalOpen}\r\n        \r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        closeTimeoutMS={200}\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n        >\r\n                <h1> {(activeEvent)? 'Editar Evento':'Nuevo Evento'} </h1>\r\n                <hr />\r\n                <form className=\"container\"\r\n                      onSubmit={hanleSubmit}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora inicio</label>\r\n                        <DateTimePicker\r\n                            onChange={hanleStartDateChange}\r\n                            value={dateStart}\r\n                            className=\"form-control\"\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora fin</label>\r\n                        <DateTimePicker\r\n                            onChange={hanleEndDateChange}\r\n                            value={endDate}\r\n                            minDate={dateStart}\r\n                            className=\"form-control\"\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className={`form-control ${!titleValid&& 'is-invalid'}`}\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            autoComplete=\"off\"\r\n                            value={title}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            value={notes}\r\n                            onChange={handleInputChange}\r\n                        ></textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary btn-block\"\r\n                    >\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n\r\n                </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { clearActiveNote } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch()\r\n    const handleClick=()=>{\r\n        dispatch(uiOpenModal());   \r\n        dispatch(clearActiveNote()) ;\r\n    }\r\n    return (\r\n        <button \r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClick}>\r\n                \r\n            <i className=\"fas fa-plus\"> </i>\r\n\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events'\r\n\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch()\r\n    const handleClick=()=>{\r\n        dispatch(eventStartDelete())\r\n    }\r\n    return (\r\n        <button \r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleClick}>\r\n                \r\n            <i className=\"fas fa-trash\"> </i>\r\n            <span>Borrar Evento</span>\r\n\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Navbar } from '../ui/Navbar'\r\nimport {Calendar,momentLocalizer} from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../helpers/calendar-messages-es';\r\nimport 'moment/locale/es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { clearActiveNote,eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\nexport const CalendarScreen = () => {\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n    const dispatch = useDispatch();\r\n    const {events,activeEvent} = useSelector(state => state.calendar)\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n    const onDoubleClick=(e)=>{\r\n        dispatch(uiOpenModal());    \r\n    }\r\n    const onSelectSlot=(e)=>{\r\n        dispatch(clearActiveNote());\r\n    }\r\n    \r\n    const onSelectEvent=(e)=>{\r\n        dispatch(eventSetActive(e))\r\n    }\r\n    const onViewChange=(e)=>{\r\n        setLastView(e);\r\n        localStorage.setItem('lastView',e);\r\n    }\r\n\r\n    const eventStlyeGetter =(event,start,end,isSelected)=>{\r\n        \r\n        const style={\r\n            backgroundColor:(uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius:'0px',\r\n            opacity: 0.8,\r\n            display:'block',\r\n            color:'white'\r\n        }\r\n        \r\n        return {\r\n                style\r\n            }\r\n    }\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar/>\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStlyeGetter}\r\n                components={{\r\n                    event:CalendarEvent\r\n                }}\r\n                view={lastView}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                onView={onViewChange}\r\n            />\r\n            <AddNewFab/>\r\n\r\n            <CalendarModal/>\r\n            { (activeEvent)&&\r\n             <DeleteEventFab/>\r\n            }\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    \r\n    return (\r\n        <Route {...rest}\r\n        component={(props) =>(\r\n            (  isAuthenticated) \r\n                ? (<Component {...props}/>)\r\n                : (<Redirect to=\"/login\"/>)\r\n        )\r\n\r\n        }>\r\n            \r\n        </Route>\r\n    )\r\n}\r\n\r\nPrivateRoute.propTyps = {\r\n    isAuthenticated:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n        component={(props) =>(\r\n            (  !isAuthenticated) \r\n                ? (<Component {...props}/>)\r\n                : (<Redirect to=\"/\"/>)\r\n        )\r\n\r\n        }>\r\n            \r\n        </Route>\r\n    )\r\n}\r\nPublicRoute.propTyps = {\r\n    isAuthenticated:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../../actions/auth';\r\nimport { LoginScreen } from '../auth/LoginScreen'\r\nimport { CalendarScreen } from '../calendar/CalendarScreen'\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n  const {checking,uid} = useSelector(state => state.auth)\r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n    \r\n  }, [dispatch])\r\n  if(checking){\r\n    return <h5>Espere...</h5>\r\n\r\n  }\r\n    return (\r\n        <Router>\r\n        <div>\r\n          <Switch>\r\n           <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid} />\r\n           <PrivateRoute exact path=\"/\" component={CalendarScreen} isAuthenticated={!!uid} />\r\n           <Redirect to=\"/\"/> \r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\n\r\n\r\nconst initialState={\r\n    checking:true,\r\n    \r\n}\r\n\r\nexport const authReducer=(state=initialState,action)=>{\r\n    \r\n    switch (action.type) {\r\n        \r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                checking:false,\r\n                ...action.payload   \r\n            }\r\n\r\n            case types.authCheckingFinish:\r\n                return{\r\n                    ...state,\r\n                    checking:false  \r\n                }\r\n            case types.authLogout:\r\n                return{\r\n                    checking:false\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { types } from '../types/types';\r\nconst initialState={\r\n events:[],\r\n activeEvent:null\r\n};\r\n\r\nexport const calendarReducer = (state=initialState,action) => \r\n{\r\n    switch (action.type) {\r\n        case types.eventAddNew:\r\n            \r\n            return {\r\n                ...state,\r\n                events:[...state.events,action.payload]\r\n                \r\n            }\r\n        case types.eventSetActive:\r\n            \r\n            return {\r\n                ...state,\r\n                activeEvent:action.payload\r\n            }\r\n        case types.eventClearActive:\r\n            return{\r\n                ...state,\r\n                activeEvent:null\r\n            }\r\n        case types.eventClearAll:\r\n            return{\r\n                ...initialState\r\n            }  \r\n        case types.eventUpdate:\r\n            return{\r\n                ...state,\r\n                events:state.events.map(\r\n                    e =>(e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events:state.events.filter(\r\n                    e =>(e.id !== state.activeEvent.id) \r\n                ),\r\n                activeEvent:null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events:[...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState={\r\n    modalOpen:false,\r\n}\r\nexport const uiReducer = (state=initialState,action) => \r\n{\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            \r\n            return {\r\n                ...state,\r\n                modalOpen:true\r\n            }\r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\n\r\n\r\n\r\nexport const rootReducer=combineReducers({\r\n    ui:uiReducer,\r\n    calendar:calendarReducer,\r\n    auth:authReducer\r\n})","import {createStore, applyMiddleware, compose} from 'redux'\r\n\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\n\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n\r\n\r\n\r\nexport const store= createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk))\r\n    );","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './components/routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport '../src/styles.css';\n\n\n\n\nReactDOM.render(\n\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}